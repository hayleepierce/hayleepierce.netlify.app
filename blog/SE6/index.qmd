---
author: Haylee Pierce
title: SE6 - "How to Lead a Team"
date: '10/20/2023'
date-format: MM/DD/YYYY
categories: [post, SE, Week 6]
description: <em>My week 6 professional pr√©cis for Software Engineering at Google.</em>
---

::: {.justify}

The ["How to Lead a Team"](https://abseil.io/resources/swe-book/html/ch05.html) chapter of _Software Engineering_ discusses the importance of having designated leaders for teams. Two leadership roles are mentioned within the article, __Manager__ and __Tech Lead__. 

The manager is tasked with overseeing the performance, productivity, and happiness of the team members. They have to balance between ensuring that the needs of the business are being met, while also looking after the individual team members. The tech lead is in charge of the technology efforts. They manage technology decisions and choices, architecture, priorities, velocity, and general project management. This individual typically works on the project with the team; therefore, they often have to make the decision to complete a task themselves or assign it to a team member. These roles are often merged into one, __Tech Lead Manager__, for smaller teams. However, as the size of the team/project increases it is important for these roles to be split between two individuals, as to prevent the leaders from becoming overwhelmed and burnt out.

Something that a lot of leaders fall into is "over-managing" their team, which can involve micromanaging, ignoring low performers, and hiring pushovers. Over-managing a team typically causes them to be less efficient and productive; leading to the downfall of the team. Leaders can avoid falling into this behavior by adopting a "servant leadership" mindset. This means that the leader's most important task is to serve their team and to act in their team's best interest.

This article could be extremely helpful to our class. We are working as a team to complete two projects, but we lack stable leadership. The "leaders" of the team are often changing and the requirements of their positions are not clear. If we apply the practices of this article to our team, we could potentially become more efficient and productive.

:::

{{< include /_back-blog.qmd >}}