---
author: Haylee Pierce
title: DB1 - "Introduction to Debugging"
date: '11/30/2023'
date-format: MM/DD/YYYY
categories: [Debugging Book, Week 10]
description: <em>My week 10 professional pr√©cis for Debugging Book.</em>
---

::: {.justify}

The ["Introduction to Debugging"](https://www.debuggingbook.org/html/Intro_Debugging.html) chapter of _Debugging Book_ covers the process of debugging, removing bugs from computer software.

The first step of debugging is, of course, finding the bugs; to do this we need to test the code. Below is the code that we will test, it is a function that is designed to remove HTML markup from a string:

```python
def remove_html_markup(s):
    tag = False
    out = ""

    for c in s:
        if c == '<':    # start of markup
            tag = True
        elif c == '>':  # end of markup
            tag = False
        elif not tag:
            out = out + c

    return out
```

We will use an assertion to test this function:

```python
from ExpectError import ExpectError
with ExpectError():
    assert remove_html_markup('<input type="text" value="<your name>">') == ""
```

The assertion returns the following error message:

```python
Traceback (most recent call last):
    File "/var/folders/n2/xd9445p97rb3xh7m1dfx8_4h0006ts/T/ipykernel_20417/145241764.py", line 2, in <cell line: 1>
        assert remove_html_markup('<input type="text" value="<your name>">') == ""
AssertionError (expected)
```

Now starts the debugging process!

There are a couple forms of debugging that are not very efficient, and you should avoid using them.

- Prinf Debugging: printing throughout the code to see what is going on
- Debugging into Existence: changing things until the program works
- Use the Most Obvious Fix: hard coding a fix for a specific input

To debug a program efficiently, you must understand exactly what the program is doing and what the problem is. The _scientific method_ is the process that we use when debugging. 

You first must come up with the question that you are trying to solve. The question for the error above is "Why does the `remove_html_markup()` function work with some inputs, but not others?". Now we need to form a hypothesis; the answer to the question. The hypothesis then needs to be tested to ensure that it is correct. This process will continue until a correct hypothesis is found. This starts the process of fixing the bug, which, now that you know what the issue is, should be a fairly straightforward.

The process of debugging is an intergral part developing our tools, Chaten and Cellveyor. We have, and will continue to run into bugs, so it is important that we take the proper steps towards fixing the issues. I know my go-to method of debugging is "Printf Debugging," and I think many people in our class will agree. Using the scientific method to debug our tools will speedup their development.
:::

{{< include /_back-blog.qmd >}}